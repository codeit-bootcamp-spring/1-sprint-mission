plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle' // 코드 스타일 체크 유지'
    id "org.sonarqube" version "6.0.1.5171"
}



group = 'com.sprint.mission'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "sqp_0d0e4d42b755c091477dbde4e5af6cc229190c9e"
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Utility Libraries
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.springframework.boot:spring-boot-starter-aop'


    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    ignoreFailures = true
    //toolVersion = '10.12.1'
    //configFile = rootProject.file('checkstyle.xml')
    //configFile = file("${rootProject.projectDir}/checkstyle.xml")
}
